server:
  port: 8765

authserver:
    hostname: localhost
    port: 8899
    contextPath: userauth

zuul:
  routes:
    user-webservice: /api/user/**
    task-webservice: /api/task/**
    web-portal: /**
    user:
      path: /api/loggedinuser/**
      stripPrefix: true
      url: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring:
  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html
    client:
      accessTokenUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/token
      userAuthorizationUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/authorize
      clientId: client
      clientSecret: secret
    resource:
      userInfoUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/me
      preferTokenInfo: false
  datasource:
    url: jdbc:mysql://localhost:3306/auth
    username: root
    password: password
    driver-class: com.mysql.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: create
  security:
    csrfCookieName: XSRF-TOKEN
    csrfAngularHeader: X-XSRF-TOKEN